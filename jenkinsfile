node {
  stage('SCM') {
    checkout scm
  }

  stage('Clean Workspace') {
    try {
      sh '/usr/local/apache-maven/bin/mvn clean'
    } catch (Exception e) {
      echo "Failed to clean workspace: ${e.message}"
      currentBuild.result = 'UNSTABLE'
      throw e
    }
  }

  stage('Format License Headers') {
    try {
      sh '/usr/local/apache-maven/bin/mvn license:format'
    } catch (Exception e) {
      echo "Failed to format license headers: ${e.message}"
      currentBuild.result = 'UNSTABLE'
      throw e
    }
  }

  stage('Build') {
    try {
      sh '/usr/local/apache-maven/bin/mvn compile'
    } catch (Exception e) {
      echo "Build failed: ${e.message}"
      currentBuild.result = 'FAILURE'
      throw e
    }
  }

  stage('Verify Build Output') {
    sh 'ls -la target/classes'
  }

  stage('SonarQube Analysis') {
    def scannerHome = '/home/harsha/Downloads/sonarqube/sonar-scanner-cli-6.1.0.4477-linux-x64/sonar-scanner-6.1.0.4477-linux-x64'

    withSonarQubeEnv() {
      try {
        sh "${scannerHome}/bin/sonar-scanner -Dsonar.java.binaries=target/classes"
      } catch (Exception e) {
        echo "SonarQube analysis failed: ${e.message}"
        currentBuild.result = 'FAILURE'
        throw e
      }
    }
  }
}
