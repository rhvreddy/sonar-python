node {
  stage('SCM') {
    checkout scm
  }

  stage('Clean Workspace') {
    try {
      sh 'rm -rf /var/lib/jenkins/workspace/test-python/target/'
    } catch (Exception e) {
      echo "Failed to clean workspace: ${e.message}"
      currentBuild.result = 'UNSTABLE'
      throw e
    }
  }

  stage('Format License Headers') {
    try {
      sh '/usr/local/apache-maven/bin/mvn license:format'
    } catch (Exception e) {
      echo "Failed to format license headers: ${e.message}"
      currentBuild.result = 'UNSTABLE'
      throw e
    }
  }

  stage('Build') {
    try {
      sh '/usr/local/apache-maven/bin/mvn clean compile'
    } catch (Exception e) {
      echo "Build failed: ${e.message}"
      currentBuild.result = 'FAILURE'
      throw e
    }
  }

  stage('SonarQube Analysis') {
    def mvn = tool 'Default Maven'; // Use the Maven installation configured in Jenkins
    withSonarQubeEnv() {
      try {
        sh "${mvn}/bin/mvn clean verify sonar:sonar -Dsonar.projectKey=rhvreddy_sonar-python_72748a6a-1544-4671-914e-79f2daa1598f -Dsonar.projectName='sonar-python' -Dsonar.login=sqa_bc8ebc2be98c29d3a60ff156f17e5884d8398da2"
      } catch (Exception e) {
        echo "SonarQube analysis failed: ${e.message}"
        currentBuild.result = 'FAILURE'
        throw e
      }
    }
  }
}
